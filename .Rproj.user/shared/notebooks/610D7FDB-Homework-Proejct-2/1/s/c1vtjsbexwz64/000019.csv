"0","# Calculate the total number of words written by each artist"
"0","total_words <- aggregate(text_combined ~ artist, data = all_artists_df, FUN = function(x) length(unlist(strsplit(x, ""\\s+""))))"
"0",""
"0","# Merge total words with vocabulary dataframe"
"0","vocabulary_df <- merge(vocabulary_df, total_words, by = ""artist"", all.x = TRUE)"
"0",""
"0","# Calculate weighted average vocabulary size, handling division by zero"
"0","vocabulary_df$weighted_avg_vocabulary <- ifelse(vocabulary_df$text_combined == 0, 0, vocabulary_df$vocabulary_size / vocabulary_df$text_combined)"
"0",""
"0","# Sort dataframe by weighted average vocabulary size"
"0","vocabulary_df <- vocabulary_df[order(vocabulary_df$weighted_avg_vocabulary, decreasing = TRUE), ]"
"0",""
"0","# Create a subset dataframe for the 5 artists with the largest adjusted vocabulary"
"0","top5_largest_adjusted <- head(vocabulary_df, 5)"
"0",""
"0","# Create a subset dataframe for the 5 artists with the smallest adjusted vocabulary"
"0","top5_smallest_adjusted <- tail(vocabulary_df, 5)"
"0",""
"0","# Combine the top 5 largest and smallest adjusted dataframes"
"0","combined_adjusted_df <- rbind(top5_largest_adjusted, top5_smallest_adjusted)"
"0",""
"0","# Add a column to indicate whether the artist has the largest or smallest adjusted vocabulary"
"0","combined_adjusted_df$category <- ifelse(combined_adjusted_df$artist %in% top5_largest_adjusted$artist, ""Largest"", ""Smallest"")"
"0",""
"0","# Reorder the artists within each category"
"0","combined_adjusted_df$artist <- factor(combined_adjusted_df$artist, levels = combined_adjusted_df$artist[order(combined_adjusted_df$category, combined_adjusted_df$weighted_avg_vocabulary)])"
"0",""
"0","# Plot the combined adjusted data"
"0","ggplot(combined_adjusted_df, aes(x = reorder(artist, weighted_avg_vocabulary), y = weighted_avg_vocabulary)) +"
"0","  geom_bar(stat = ""identity"", aes(fill = category)) +"
"0","  facet_wrap(~ category, scales = ""free"", nrow = 1) +"
"0","  labs(title = ""Top 5 Artists with Largest and Smallest Adjusted Vocabulary"","
"0","       x = ""Artist"","
"0","       y = ""Weighted Average Vocabulary Size"","
"0","       fill = ""Category"") +"
"0","  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
